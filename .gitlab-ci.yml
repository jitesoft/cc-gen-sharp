stages:
  - test
  - build
  - containerize
  - pre-release
  - release

test:
  variables:
    GIT_DEPTH: 999
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - dotnet restore
    - dotnet test
    
build:
  stage: build
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
    - when: never
  parallel:
    matrix:
      - { BUILD_ARCH: "win-x64" }
      - { BUILD_ARCH: "linux-x64" }
      - { BUILD_ARCH: "linux-musl-x64" }
      - { BUILD_ARCH: "linux-musl-arm64" }
      - { BUILD_ARCH: "linux-musl-arm" }
      - { BUILD_ARCH: "osx-x64" }
      - { BUILD_ARCH: "osx-arm64" }
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - dotnet restore cc-gen/cc-gen.csproj
    - dotnet publish cc-gen/cc-gen.csproj -c Release --self-contained true -r ${BUILD_ARCH} -v m --version-suffix ${CI_COMMIT_TAG} -o release/${BUILD_ARCH}
    - $(cd release/${BUILD_ARCH} && tar -czf ${CI_PROJECT_DIR}/cc-gen-v${CI_COMMIT_TAG}-${BUILD_ARCH}.tar.gz *)
  artifacts:
    paths:
      - release/
      - cc-gen-v${CI_COMMIT_TAG}-${BUILD_ARCH}.tar.gz
    expire_in: 1 day

containerize:
  stage: containerize
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
    - when: never
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  script:
    - mv release/linux-musl-x64 release/amd64
    - mv release/linux-musl-arm64 release/arm64
    - mv release/linux-musl-arm release/arm
    - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 --push -t ghcr.io/jitesoft/cc-gen-sharp:${CI_COMMIT_TAG} -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} --build-arg "BUILD_TIME=$(date -Iseconds)" --build-arg "VERSION=${CI_COMMIT_TAG}" -f cc-gen/Dockerfile .
  tags:
    - protected
    - buildx

create_release:
  variables:
    GIT_DEPTH: 999
  stage: pre-release
  image: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
    - when: never
  script:
    - "cc-gen gen --latest > CHANGELOG.md"
  artifacts:
    paths:
      - CHANGELOG.md
    when: on_success
    expire_in: 1 hours
  tags:
    - protected

release:
  needs:
    - job: create_release
      artifacts: true
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  stage: release
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
    - when: never
  script:
    - echo "Creating release for ${CI_COMMIT_TAG}"
    - release-cli create --name "${CI_COMMIT_TAG}" --description "$(cat CHANGELOG.md)" --tag-name "${CI_COMMIT_TAG}"
  tags:
    - protected

publish_packages:
  image: registry.gitlab.com/jitesoft/dockerfiles/misc:latest
  rules:
    - if: '$CI_COMMIT_TAG'
      when: on_success
    - when: never
  parallel:
    matrix:
      - { BUILD_ARCH: "win-x64" }
      - { BUILD_ARCH: "linux-x64" }
      - { BUILD_ARCH: "linux-musl-x64" }
      - { BUILD_ARCH: "linux-musl-arm64" }
      - { BUILD_ARCH: "linux-musl-arm" }
      - { BUILD_ARCH: "osx-x64" }
      - { BUILD_ARCH: "osx-arm64" }
  needs:
    - job: build
      artifacts: true
  stage: release
  script:
    - sha256sum cc-gen-v${CI_COMMIT_TAG}-${BUILD_ARCH}.tar.gz > cc-gen-v${CI_COMMIT_TAG}-${BUILD_ARCH}.tar.gz.sha256sum
    - 'curl --retry 3 -H "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file cc-gen-v${CI_COMMIT_TAG}-${BUILD_ARCH}.tar.gz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/cc-gen/${CI_COMMIT_TAG}/cc-gen-${CI_COMMIT_TAG}-${BUILD_ARCH}.tar.gz"'
    - 'curl --retry 3 -H "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file cc-gen-v${CI_COMMIT_TAG}-${BUILD_ARCH}.tar.gz.sha256sum "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/cc-gen/${CI_COMMIT_TAG}/cc-gen-${CI_COMMIT_TAG}-${BUILD_ARCH}.tar.gz.sha256sum"'
